{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/chat/chat.component.ts","webpack:///src/app/component/chat/chat.component.html","webpack:///src/app/component/home/home.component.ts","webpack:///src/app/component/home/home.component.html","webpack:///src/app/component/login/login.component.ts","webpack:///src/app/component/login/login.component.html","webpack:///src/app/component/nav-bar/nav-bar.component.ts","webpack:///src/app/component/nav-bar/nav-bar.component.html","webpack:///src/app/component/profile/profile.component.ts","webpack:///src/app/component/profile/profile.component.html","webpack:///src/app/component/signup/signup.component.ts","webpack:///src/app/component/signup/signup.component.html","webpack:///src/app/service/api-uri.ts","webpack:///src/app/service/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChatComponent","userService","router","userArray","currentUser","selectedUser","_id","allMessages","newMessage","localStorage","length","navigate","JSON","parse","getItem","getUser","subscribe","res","message","err","console","error","user","getChat","user1","user2","value","dateValue","Date","toLocaleDateString","toLocaleTimeString","trim","postMessage","mensaje","updateMessages","HomeComponent","photo","postArray","newPost","text","extension","link","selectedFile","getPost","event","log","target","files","getBase64","file","me","reader","FileReader","readAsDataURL","onload","result","split","pop","name","onerror","creator","publicacion","Foto","makePost","reverse","post","translateValue","makeNewPost","fileChange","LoginComponent","loginInfo","nick","password","loginUser","status","alert","setItem","stringify","location","replace","NavBarComponent","signedIn","clear","ProfileComponent","userPhoto","updateUser","updatePhoto","updateValues","SignupComponent","password2","imageLink","newUser","createNewUser","createUser","API_URI","UserService","http","apiUri","put","get","providedIn","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './component/home/home.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { SignupComponent } from './component/signup/signup.component';\nimport { ProfileComponent } from './component/profile/profile.component';\nimport { ChatComponent } from './component/chat/chat.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  {\n    path: 'me',\n    component: ProfileComponent\n  },\n  {\n    path: 'chat',\n    component: ChatComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'social-app';\n}\n","<app-nav-bar></app-nav-bar>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './component/nav-bar/nav-bar.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { SignupComponent } from './component/signup/signup.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { ProfileComponent } from './component/profile/profile.component';\nimport { FormsModule } from '@angular/forms'\nimport { UserService } from './service/user.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChatComponent } from './component/chat/chat.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    ProfileComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/service/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  constructor(private userService: UserService,\n    private router: Router) { }\n\n  userArray: any = [];\n  currentUser: any = {\n    id: ''\n  };\n  selectedUser: any = {\n    _id: ''\n  };\n\n  allMessages: any = [];\n\n  newMessage: string = '';\n\n  ngOnInit(): void {\n    if (localStorage.length == 0) {\n      this.router.navigate(['/']);\n      return;\n    }\n    this.currentUser = JSON.parse(localStorage.getItem('userInfo'));\n    this.userService.getUser().subscribe(\n      (res: any) => this.userArray = res.message,\n      err => console.error(err)\n    );\n  }\n\n  selectUser(user: any) {\n    this.selectedUser = user;\n    this.userService.getChat({\n      user1: this.currentUser.id,\n      user2: this.selectedUser._id\n    }).subscribe(\n      (res: any) => this.allMessages = res.message,\n      err => console.error(err)\n    );\n  }\n\n  getDateValue(value: string) {\n    var dateValue = new Date(value);\n    return `${dateValue.toLocaleDateString('es-GT')} ${dateValue.toLocaleTimeString('es-GT')}`;\n\n  }\n\n  postNewMessage() {\n    this.newMessage = this.newMessage.trim();\n    if (this.newMessage == '') return;\n    this.userService.postMessage({\n      user1: this.currentUser.id,\n      user2: this.selectedUser._id,\n      mensaje: this.newMessage\n    }).subscribe(\n      () => {\n        this.updateMessages();\n        this.newMessage = '';\n      },\n      (err) => console.error(err)\n    );\n  }\n\n  updateMessages() {\n    this.userService.getChat({\n      user1: this.currentUser.id,\n      user2: this.selectedUser._id\n    }).subscribe(\n      (res: any) => this.allMessages = res.message,\n      err => console.error(err)\n    );\n  }\n\n}\n","<div class=\"row\" style=\"margin-top: 30px; margin-bottom: 30px;\">\n    <div class=\"col-md-3\">\n        <div class=\"row\" *ngFor=\"let user of userArray\">\n            <div class=\"col\" style=\"margin-top: 20px; margin-bottom: 20px;\" *ngIf=\"user._id != currentUser.id\">\n                <img class=\"thumbnail\" style=\"margin-right: 10px;\" src=\"https://semi1p2photo.s3.amazonaws.com/{{user.photo}}\">\n                <button class=\"btn btn-light\" (click)=\"selectUser(user)\">\n                    {{user.nick}}\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-9\">\n        <div class=\"container-fluid\" *ngIf=\"selectedUser._id != ''\">\n            <div class=\"row\" style=\"height: 490px; overflow-y: auto;\">\n                <div class=\"col\">\n                    <div class=\"container-fluid\">\n                        <div class=\"row\" *ngFor=\"let message of allMessages\">\n                            <div [ngClass]=\"{\n                                'col': true,\n                                'alert': true,\n                                'alert-success': message.user1 != currentUser.id,\n                                'text-left': message.user1 != currentUser.id,\n                                'alert-secondary': message.user1 == currentUser.id,\n                                'text-right': message.user1 == currentUser.id\n                                \n                            }\">{{message.mensaje}}\n                                <p style=\"font-size: 12px;\">{{getDateValue(message.fecha)}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\" style=\"margin-top: 20px;\">\n                <div class=\"col\">\n                    <form>\n                        <div class=\"form-row\">\n                            <div class=\"col-md-8\">\n                                <input type=\"text\" class=\"form-control\" name=\"newMessage\" id=\"newMessage\" placeholder=\"Mensaje.\" autocomplete=\"off\" [(ngModel)]=\"newMessage\">\n                            </div>\n                            <div class=\"col-md-2\">\n                                <button class=\"btn btn-dark btn-block\" (click)=\"postNewMessage()\">Enviar</button>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <button class=\"btn btn-dark btn-block\" (click)=\"updateMessages()\">Refrescar</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router,\n    private userService: UserService) { }\n\n  user: any = {\n    photo: ''\n  };\n\n  postArray: any = [];\n\n  newPost: any = {\n    text: '',\n    photo: '',\n    extension: '',\n    link: 'https://pngimage.net/wp-content/uploads/2018/06/no-image-available-icon-png-7.png'\n  };\n\n  selectedFile: File = null;\n\n  ngOnInit(): void {\n    if (localStorage.length == 0) {\n      this.router.navigate(['/login'])\n      return;\n    }\n    this.user = JSON.parse(localStorage.getItem('userInfo'));\n    if (this.user != null) {\n      this.user.photo = `https://semi1p2photo.s3.amazonaws.com/${this.user.photo}`;\n    } else {\n      this.user = {\n        photo: ''\n      };\n    }\n    this.getPost();\n  }\n\n  fileChange(event) {\n    console.log(event);\n    this.selectedFile = event.target.files[0];\n    if (this.selectedFile == null) {\n      this.newPost.link = 'https://pngimage.net/wp-content/uploads/2018/06/no-image-available-icon-png-7.png';\n      return;\n    }\n    this.getBase64(this.selectedFile);\n  }\n\n  getBase64(file: File) {\n    let me = this;\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      me.newPost.photo = (reader.result as string).split(',').pop();\n      me.newPost.extension = file.name.split('.').pop();\n      me.newPost.link = `data:image/${me.newPost.extension};base64,${me.newPost.photo}`\n    };\n    reader.onerror = function (error) {\n      console.error(error);\n    };\n  }\n\n\n  makeNewPost() {\n    this.newPost.text = this.newPost.text.trim();\n    if (this.newPost.text == '') return;\n    var value;\n    if (this.selectedFile == null) {\n      value = {\n        creator: this.user.id,\n        publicacion: this.newPost.text,\n      } \n    } else {\n      value = {\n        creator: this.user.id,\n        publicacion: this.newPost.text,\n        Foto: this.newPost.photo,\n        extension: this.newPost.extension\n      } \n    }\n    this.userService.makePost(value).subscribe(\n      (res) => \n      {\n        this.newPost = {\n          text: '',\n          photo: '',\n          extension: '',\n          link: 'https://pngimage.net/wp-content/uploads/2018/06/no-image-available-icon-png-7.png'\n        };\n        this.selectedFile = null;\n        this.getPost();\n      },\n      (err) => console.error(err)\n    );\n  }\n\n  getPost() {\n    this.userService.getPost().subscribe(\n      (res: any) => {\n        this.postArray = res.message.reverse();\n        console.log(this.postArray);\n      }, (err) => console.error(err)\n    );\n  }\n\n  translatePost(post: any){\n    this.userService.translateValue(post.publicacion).subscribe(\n      (res: any) => post.publicacion = res.message, \n      (err) => console.error(err)\n    )\n  }\n\n}\n","<div class=\"row\" style=\"margin-top: 30px; margin-bottom: 50px;\">\n    <div class=\"col-md-3\">\n        <img class=\"principal-thumbnail mx-auto d-block\" [src]=\"user.photo\">\n        <h6 class=\"text-center\" style=\"margin-top: 10px;\">{{user.nick}}</h6>\n        <h5 class=\"text-center\" style=\"margin-top: 10px;\">{{user.name}}</h5>\n    </div>\n\n    <div class=\"col-md-9\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <form>\n                                <div class=\"form-row\" style=\"margin-bottom: 15px;\">\n                                    <div class=\"col-md-10 col-sm-12\">\n                                        <textarea [(ngModel)]=\"newPost.text\" name=\"cuerpo\" class=\"form-control\" id=\"cuerpo\" rows=\"3\"></textarea>\n                                        <div class=\"form-row\" style=\"margin-top: 20px;\">\n                                            <div class=\"col-md-3\">\n                                                <button type=\"button\" (click)=\"makeNewPost()\" class=\"btn btn-dark btn-block\">Publicar</button>\n                                            </div>\n                                            <div class=\"col-md-7\" style=\"margin-top: 4px;\">\n                                                <input type=\"file\" accept=\"image/*\" class=\"form-control-file\" (change)=\"fileChange($event)\" #fileInput>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-2 col-sm-12 limit\">\n                                        <img [src]=\"newPost.link\">\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"row\" *ngFor=\"let post of postArray\" style=\"margin-top: 30px;\">\n                <div class=\"col\">\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <img class=\"mini-thumbnail\" src=\"https://semi1p2photo.s3.amazonaws.com/{{post.Photo}}\">\n                            <h5 style=\"display: inline-block; margin-left: 10px;\">{{post.Nick}}</h5>\n                        </div>\n                        <div class=\"card-body\">\n                            <div *ngIf=\"post.Foto == undefined\">\n                                <p>{{post.publicacion}}</p>\n                            </div>\n                            <div *ngIf=\"post.Foto != undefined\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-6 col-12 d-flex justify-content-center align-items-center\">\n                                        <p>{{post.publicacion}}</p>\n                                    </div>\n                                    <div class=\"col-md-6 col-12\">\n                                        <img src=\"https://semi1p2photo.s3.amazonaws.com/{{post.Foto}}\" class=\"card-img\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <p class=\"btn btn-link\" style=\"font-size: 12px;\" (click)=\"translatePost(post)\"> Traducir</p>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/service/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private userService: UserService,\n    private router: Router) { }\n\n  loginInfo: any = {\n    nick: '',\n    password: ''\n  }\n\n  ngOnInit(): void {\n    if (localStorage.length > 0) {\n      this.router.navigate(['/'])\n    }\n  }\n\n  loginUser() {\n    this.loginInfo.nick = this.loginInfo.nick.trim()\n    this.userService.loginUser(this.loginInfo).subscribe(\n      (res: any) => {\n        if (res.status == 'error') {\n          alert(res.message)\n        } else {\n          localStorage.setItem('userInfo', JSON.stringify(res))\n          location.replace('/');\n        }\n      },\n      (err) => console.error(err)\n    );\n  }\n\n}\n","<div class=\"row\" style=\"margin-top: 30px;\">\n    <div class=\"col-md-6 offset-md-3\">\n        <div id=\"login-box\" class=\"col-md-12\">\n            <h3 class=\"text-center\">Iniciar Sesión</h3>\n            <div class=\"form-group\">\n                <label for=\"usuario\">Usuario:</label><br>\n                <input type=\"text\" name=\"usuario\" id=\"usuario\" [(ngModel)]=\"loginInfo.nick\" class=\"form-control\" autocomplete=\"off\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Contraseña:</label><br>\n                <input type=\"password\" name=\"password\" id=\"password\" [(ngModel)]=\"loginInfo.password\" class=\"form-control\">\n            </div>\n            <button class=\"btn btn-dark btn-block\" (click)=\"loginUser()\">Ingresar</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  signedIn: boolean = false;\n\n  ngOnInit(): void {\n    this.signedIn = localStorage.length > 0;\n  }\n\n  signOut() {\n    localStorage.clear();\n    location.replace('/');\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" routerLink=\"/\">uSocial</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\" *ngIf=\"signedIn\">\n                <button class=\"btn btn-dark\">\n          <a class=\"nav-link\" routerLink=\"/\">Inicio</a>\n        </button>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"signedIn\">\n                <button class=\"btn btn-dark\">\n          <a class=\"nav-link\" routerLink=\"/me\">Perfil</a>\n        </button>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"signedIn\">\n                <button class=\"btn btn-dark\">\n          <a class=\"nav-link\" routerLink=\"/chat\">Conversaciones</a>\n        </button>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"!signedIn\">\n                <button class=\"btn btn-dark\">\n          <a class=\"nav-link\" routerLink=\"/login\">Iniciar Sesión</a>\n        </button>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"!signedIn\">\n                <button class=\"btn btn-dark\">\n          <a class=\"nav-link\" routerLink=\"/signup\">Registrarse</a>\n        </button>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"signedIn\">\n                <button class=\"btn btn-dark\" (click)=\"signOut()\">\n          <a class=\"nav-link\">Cerrar sesión</a>\n        </button>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private userService: UserService,\n    private router: Router) { }\n\n  password: string = '';\n\n  selectedFile: File = null;\n\n  user: any = {\n    name: '',\n    nick: '',\n    photo: ''\n  }\n\n  photo: any = {\n    value: '',\n    extension: ''\n  }\n\n  userPhoto: string = '';\n\n  ngOnInit(): void {\n    if (localStorage.length == 0) {\n      this.router.navigate(['/'])\n    }\n    this.user = JSON.parse(localStorage.getItem('userInfo'));\n    this.userPhoto = `https://semi1p2photo.s3.amazonaws.com/${this.user.photo}`;\n    this.user.photo = this.userPhoto;\n  }\n\n  updateValues() {\n    this.user.name = this.user.name.trim();\n    this.user.nick = this.user.nick.trim();\n    if (this.user.name == '' || this.user.nick == '') return;\n    this.userService.updateUser({\n      name: this.user.name,\n      nick: this.user.nick,\n      id: this.user.id,\n      password: this.password\n    }).subscribe(\n      (res: any) => {\n        if (res.status == 'error') {\n          alert(res.message)\n        } else {\n          localStorage.setItem('userInfo', JSON.stringify(res))\n          this.router.navigate(['/'])\n        }\n      }, (err) => console.error(err)\n    )\n  }\n\n  updatePhoto() {\n    if (this.selectedFile == null) return;\n    var value = {\n      id: this.user.id,\n      password: this.password,\n      photo: this.photo.value,\n      extension: this.photo.extension\n    }\n    this.userService.updatePhoto(value).subscribe(\n      (res: any) => {\n        if (res.status == 'error') {\n          alert(res.message)\n        } else {\n          localStorage.setItem('userInfo', JSON.stringify(res))\n          this.router.navigate(['/'])\n        }\n      }, (err) => console.error(err)\n    );\n  }\n\n  fileChange(event) {\n    this.selectedFile = event.target.files[0];\n    if (this.selectedFile == null) {\n      this.user.photo = this.userPhoto;\n      return;\n    }\n    this.getBase64(this.selectedFile);\n  }\n\n  getBase64(file: File) {\n    let me = this;\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      me.photo.value = (reader.result as string).split(',').pop();\n      me.photo.extension = file.name.split('.').pop();\n      me.user.photo = `data:image/${me.photo.extension};base64,${me.photo.value}`\n    };\n    reader.onerror = function (error) {\n      console.error(error);\n    };\n  }\n\n}\n","<div class=\"row\" style=\"margin-top: 30px;\">\n    <div class=\"col-md-6 offset-md-1\">\n        <div id=\"login-box\" class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label for=\"nombre\">Nombre:</label><br>\n                <input [(ngModel)]=\"user.name\" type=\"text\" name=\"nombre\" id=\"nombre\" class=\"form-control\"\n                    autocomplete=\"off\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"user\">Usuario:</label><br>\n                <input [(ngModel)]=\"user.nick\" type=\"text\" name=\"user\" id=\"user\" class=\"form-control\"\n                    autocomplete=\"off\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"passw\">Contraseña:</label><br>\n                <input type=\"password\" name=\"passw\" id=\"passw\" [(ngModel)]=\"password\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"photoUpdate\">Nueva Foto:</label>\n                <input type=\"file\" accept=\"image/*\" class=\"form-control-file\" (change)=\"fileChange($event)\" #fileInput>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <button class=\"btn btn-dark btn-block\" (click)=\"updateValues()\">Actualizar Datos</button>\n                </div>\n                <div class=\"col\">\n                    <button class=\"btn btn-dark btn-block\" (click)=\"updatePhoto()\">Actualizar Foto</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-md-5 text-center\" style=\"margin-top: 20px;\">\n        <h2>{{user.name}}</h2>\n        <h3>{{user.nick}}</h3>\n        <img class=\"thumbnail\" [src]=\"user.photo\">\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/service/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private userService: UserService,\n    private router: Router) { }\n\n  user: any = {\n    name: '',\n    nick: '',\n    password: '',\n    password2: '',\n  }\n\n  selectedFile: File = null;\n\n  photo: any = {\n    value: '',\n    extension: ''\n  };\n\n  imageLink: string = 'https://image.flaticon.com/icons/png/512/64/64572.png';\n\n  ngOnInit(): void {\n    if (localStorage.length > 0) {\n      this.router.navigate(['/'])\n    }\n  }\n\n  fileChange(event) {\n    this.selectedFile = event.target.files[0];\n    if (this.selectedFile == null) {\n      this.imageLink = 'https://image.flaticon.com/icons/png/512/64/64572.png';\n      return;\n    }\n    this.getBase64(this.selectedFile);\n  }\n\n  getBase64(file: File) {\n    let me = this;\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      me.photo.value = (reader.result as string).split(',').pop();\n      me.photo.extension = file.name.split('.').pop();\n      me.imageLink = `data:image/${me.photo.extension};base64,${me.photo.value}`\n    };\n    reader.onerror = function (error) {\n      console.error(error);\n    };\n  }\n\n  createUser() {\n    this.user.name = this.user.name.trim();\n    this.user.nick = this.user.nick.trim();\n    if (this.user.name == \"\" || this.user.nick == \"\") return;\n    if (this.user.password != this.user.password2) return;\n    if (this.selectedFile == null) return;\n    var newUser: any = {\n      name: this.user.name,\n      nick: this.user.nick,\n      password: this.user.password,\n      photo: this.photo.value,\n      extension: this.photo.extension\n    }\n    this.userService.createNewUser(newUser).subscribe(\n      (res: any) => {\n        if (res.status == 'error') {\n          alert(res.message);\n        } else {\n          localStorage.setItem('userInfo', JSON.stringify(res))\n          location.replace('/');\n        }\n      },\n      (err) => console.error(err)\n    )\n  }\n\n}\n","<div class=\"row\" style=\"margin-top: 30px; margin-bottom: 40px;\">\n    <div class=\"col-md-6 offset-md-3\">\n        <div id=\"login-box\" class=\"col-md-12\">\n            <h3 class=\"text-center\">Registrarse</h3>\n            <div class=\"form-group\">\n                <label for=\"nombre\">Nombre Completo:</label><br>\n                <input type=\"text\" name=\"nombre\" id=\"nombre\" [(ngModel)]=\"user.name\" class=\"form-control\" autocomplete=\"off\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"user\">Usuario:</label><br>\n                <input type=\"text\" name=\"user\" id=\"user\" [(ngModel)]=\"user.nick\" class=\"form-control\" autocomplete=\"off\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"passw\">Contraseña:</label><br>\n                <input type=\"password\" name=\"passw\" id=\"passw\" [(ngModel)]=\"user.password\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"passw2\">Contraseña (de nuevo):</label><br>\n                <input type=\"password\" name=\"passw2\" id=\"passw2\" [(ngModel)]=\"user.password2\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n                <input type=\"file\" accept=\"image/*\" class=\"form-control-file\" (change)=\"fileChange($event)\" #fileInput>\n            </div>\n            <div class=\"text-center\" style=\"margin-top: 15px; margin-bottom: 15px;\">\n                <img class=\"thumbnail\" [src]=\"imageLink\">\n            </div>\n            <button (click)=\"createUser()\" class=\"btn btn-dark btn-block\">Registrarse</button>\n        </div>\n    </div>\n</div>","var API_URI: string = 'http://ec2-107-23-15-23.compute-1.amazonaws.com:3000';\r\n\r\nexport default API_URI;","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport API_URI from './api-uri'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  apiUri: string = API_URI;\n\n  constructor(private http: HttpClient) { }\n\n  createNewUser(value: any) {\n    return this.http.post(`${this.apiUri}/user`, value);\n  }\n\n  loginUser(value: any) {\n    return this.http.put(`${this.apiUri}/login`, value);\n  }\n\n  updateUser(value: any) {\n    return this.http.put(`${this.apiUri}/updateUsers`, value);\n  }\n  \n  makePost(value: any) {\n    return this.http.post(`${this.apiUri}/post`, value);\n  }\n\n  getPost() {\n    return this.http.get(`${this.apiUri}/post`);\n  }\n\n  updatePhoto(value: any) {\n    return this.http.put(`${this.apiUri}/updateFoto`, value);\n  }\n\n  getUser() {\n    return this.http.get(`${this.apiUri}/user`);\n  }\n\n  getChat(value: any) {\n    return this.http.put(`${this.apiUri}/mensaje`, value);\n  }\n\n  postMessage(value: any) {\n    return this.http.post(`${this.apiUri}/mensaje`, value);\n  }\n\n  translateValue(value: string) {\n    return this.http.post(`${this.apiUri}/traducir`, {\n      'text': value\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}